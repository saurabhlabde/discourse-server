// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  firstname    String
  lastname     String
  username     String    @unique
  email        String    @unique
  password     String
  profileImage String
  status       String
  phoneNumber  Int?
  createdAtIso String    @default("")
  createdAt    DateTime  @default(now())
  Message      Message[]
  Tokens       Tokens[]

  Room   Room[]
  UserId UserId[]
  Like   Like[]
  @@map("user")
}

model Tokens {
  id           Int      @id @default(autoincrement())
  User         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
  token        String
  createdAtIso String   @default("")
  createdAt    DateTime @default(now())

  @@map("tokens")
}

model Room {
  id           Int       @id @default(autoincrement())
  username     String
  roomUsername String
  createdAtIso String    @default("")
  createdAt    DateTime  @default(now())
  Message      Message[]
  UserId       UserId[]


  User   User? @relation(fields: [userId], references: [id])
  userId Int?
  @@map("room")
}

model UserId {
  id     Int   @id @default(autoincrement())
  User   User  @relation(fields: [userId], references: [id])
  userId Int
  Room   Room? @relation(fields: [roomId], references: [id])
  roomId Int?

  @@map("userId")
}

model Message {
  id           Int      @id @default(autoincrement())
  text         String?
  media        String?
  status       String
  User         User     @relation(fields: [userId], references: [id])
  userId       Int
  Room         Room     @relation(fields: [roomId], references: [id])
  roomId       Int
  Like         Like[]
  createdAtIso String   @default("")
  createdAt    DateTime @default(now())
}

model Like {
  id           Int      @id @default(autoincrement())
  User         User     @relation(fields: [userId], references: [id])
  userId       Int
  createdAtIso String   @default("")
  createdAt    DateTime @default(now())
  Message      Message? @relation(fields: [messageId], references: [id])
  messageId    Int?

  @@map("like")
}
